Grammar

    0 $accept: start $end

    1 start: statements

    2 statements: statements statement
    3           | ε

    4 statement: variable-declaration
    5          | print_statement
    6          | assignment-statement

    7 variable-declaration: "let" IDENTIFIER "=" expression
    8                     | "let" IDENTIFIER ":" type "=" expression ";"

    9 type: "int8_t"
   10     | "int16_t"
   11     | "int32_t"
   12     | "int64_t"
   13     | "float32_t"
   14     | "float64_t"

   15 print_statement: "print" "(" expression-list ")" ";"

   16 expression-list: expression-list "," expression
   17                | expression

   18 assignment-statement: IDENTIFIER "=" expression ";"

   19 expression: identity_expression
   20           | creation_expression

   21 creation_expression: expression "+" expression
   22                    | expression "-" expression
   23                    | expression "*" expression
   24                    | expression "/" expression
   25                    | expression "//" expression
   26                    | expression "^" expression
   27                    | expression "%" expression

   28 identity_expression: literal
   29                    | IDENTIFIER
   30                    | "(" expression ")"

   31 literal: INTEGER_LITERAL
   32        | FLOAT_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_LITERAL <std::string> (258) 31
    FLOAT_LITERAL <std::string> (259) 32
    IDENTIFIER <std::string> (260) 7 8 18 29
    "+" (261) 21
    "-" (262) 22
    "*" (263) 23
    "/" (264) 24
    "//" (265) 25
    "^" (266) 26
    "%" (267) 27
    "=" (268) 7 8 18
    ";" (269) 8 15 18
    "(" (270) 15 30
    ")" (271) 15 30
    "," (272) 16
    ":" (273) 8
    "let" (274) 7 8
    "print" (275) 15
    "int8_t" (276) 9
    "int16_t" (277) 10
    "int32_t" (278) 11
    "int64_t" (279) 12
    "float32_t" (280) 13
    "float64_t" (281) 14


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    start <std::vector<std::shared_ptr<StatementNode>>> (28)
        on left: 1
        on right: 0
    statements <std::vector<std::shared_ptr<StatementNode>>> (29)
        on left: 2 3
        on right: 1 2
    statement <std::shared_ptr<StatementNode>> (30)
        on left: 4 5 6
        on right: 2
    variable-declaration <std::shared_ptr<StatementNode>> (31)
        on left: 7 8
        on right: 4
    type <Type> (32)
        on left: 9 10 11 12 13 14
        on right: 8
    print_statement <std::shared_ptr<StatementNode>> (33)
        on left: 15
        on right: 5
    expression-list <std::vector<std::shared_ptr<ExpressionNode>>> (34)
        on left: 16 17
        on right: 15 16
    assignment-statement <std::shared_ptr<StatementNode>> (35)
        on left: 18
        on right: 6
    expression <std::shared_ptr<ExpressionNode>> (36)
        on left: 19 20
        on right: 7 8 16 17 18 21 22 23 24 25 26 27 30
    creation_expression <std::shared_ptr<ExpressionNode>> (37)
        on left: 21 22 23 24 25 26 27
        on right: 20
    identity_expression <std::shared_ptr<ExpressionNode>> (38)
        on left: 28 29 30
        on right: 19
    literal <std::shared_ptr<ExpressionNode>> (39)
        on left: 31 32
        on right: 28


State 0

    0 $accept: • start $end

    $default  reduce using rule 3 (statements)

    start       go to state 1
    statements  go to state 2


State 1

    0 $accept: start • $end

    $end  shift, and go to state 3


State 2

    1 start: statements •
    2 statements: statements • statement

    IDENTIFIER  shift, and go to state 4
    "let"       shift, and go to state 5
    "print"     shift, and go to state 6

    $default  reduce using rule 1 (start)

    statement             go to state 7
    variable-declaration  go to state 8
    print_statement       go to state 9
    assignment-statement  go to state 10


State 3

    0 $accept: start $end •

    $default  accept


State 4

   18 assignment-statement: IDENTIFIER • "=" expression ";"

    "="  shift, and go to state 11


State 5

    7 variable-declaration: "let" • IDENTIFIER "=" expression
    8                     | "let" • IDENTIFIER ":" type "=" expression ";"

    IDENTIFIER  shift, and go to state 12


State 6

   15 print_statement: "print" • "(" expression-list ")" ";"

    "("  shift, and go to state 13


State 7

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 8

    4 statement: variable-declaration •

    $default  reduce using rule 4 (statement)


State 9

    5 statement: print_statement •

    $default  reduce using rule 5 (statement)


State 10

    6 statement: assignment-statement •

    $default  reduce using rule 6 (statement)


State 11

   18 assignment-statement: IDENTIFIER "=" • expression ";"

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 18
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 12

    7 variable-declaration: "let" IDENTIFIER • "=" expression
    8                     | "let" IDENTIFIER • ":" type "=" expression ";"

    "="  shift, and go to state 22
    ":"  shift, and go to state 23


State 13

   15 print_statement: "print" "(" • expression-list ")" ";"

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression-list      go to state 24
    expression           go to state 25
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 14

   31 literal: INTEGER_LITERAL •

    $default  reduce using rule 31 (literal)


State 15

   32 literal: FLOAT_LITERAL •

    $default  reduce using rule 32 (literal)


State 16

   29 identity_expression: IDENTIFIER •

    $default  reduce using rule 29 (identity_expression)


State 17

   30 identity_expression: "(" • expression ")"

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 26
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 18

   18 assignment-statement: IDENTIFIER "=" expression • ";"
   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33
    ";"   shift, and go to state 34


State 19

   20 expression: creation_expression •

    $default  reduce using rule 20 (expression)


State 20

   19 expression: identity_expression •

    $default  reduce using rule 19 (expression)


State 21

   28 identity_expression: literal •

    $default  reduce using rule 28 (identity_expression)


State 22

    7 variable-declaration: "let" IDENTIFIER "=" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 35
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 23

    8 variable-declaration: "let" IDENTIFIER ":" • type "=" expression ";"

    "int8_t"     shift, and go to state 36
    "int16_t"    shift, and go to state 37
    "int32_t"    shift, and go to state 38
    "int64_t"    shift, and go to state 39
    "float32_t"  shift, and go to state 40
    "float64_t"  shift, and go to state 41

    type  go to state 42


State 24

   15 print_statement: "print" "(" expression-list • ")" ";"
   16 expression-list: expression-list • "," expression

    ")"  shift, and go to state 43
    ","  shift, and go to state 44


State 25

   17 expression-list: expression •
   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33

    $default  reduce using rule 17 (expression-list)


State 26

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression
   30 identity_expression: "(" expression • ")"

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33
    ")"   shift, and go to state 45


State 27

   21 creation_expression: expression "+" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 46
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 28

   22 creation_expression: expression "-" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 47
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 29

   23 creation_expression: expression "*" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 48
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 30

   24 creation_expression: expression "/" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 49
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 31

   25 creation_expression: expression "//" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 50
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 32

   26 creation_expression: expression "^" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 51
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 33

   27 creation_expression: expression "%" • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 52
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 34

   18 assignment-statement: IDENTIFIER "=" expression ";" •

    $default  reduce using rule 18 (assignment-statement)


State 35

    7 variable-declaration: "let" IDENTIFIER "=" expression •
   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33

    $default  reduce using rule 7 (variable-declaration)


State 36

    9 type: "int8_t" •

    $default  reduce using rule 9 (type)


State 37

   10 type: "int16_t" •

    $default  reduce using rule 10 (type)


State 38

   11 type: "int32_t" •

    $default  reduce using rule 11 (type)


State 39

   12 type: "int64_t" •

    $default  reduce using rule 12 (type)


State 40

   13 type: "float32_t" •

    $default  reduce using rule 13 (type)


State 41

   14 type: "float64_t" •

    $default  reduce using rule 14 (type)


State 42

    8 variable-declaration: "let" IDENTIFIER ":" type • "=" expression ";"

    "="  shift, and go to state 53


State 43

   15 print_statement: "print" "(" expression-list ")" • ";"

    ";"  shift, and go to state 54


State 44

   16 expression-list: expression-list "," • expression

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 55
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 45

   30 identity_expression: "(" expression ")" •

    $default  reduce using rule 30 (identity_expression)


State 46

   21 creation_expression: expression • "+" expression
   21                    | expression "+" expression •
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33

    $default  reduce using rule 21 (creation_expression)


State 47

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   22                    | expression "-" expression •
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33

    $default  reduce using rule 22 (creation_expression)


State 48

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   23                    | expression "*" expression •
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "^"  shift, and go to state 32

    $default  reduce using rule 23 (creation_expression)


State 49

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   24                    | expression "/" expression •
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "^"  shift, and go to state 32

    $default  reduce using rule 24 (creation_expression)


State 50

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   25                    | expression "//" expression •
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "^"  shift, and go to state 32

    $default  reduce using rule 25 (creation_expression)


State 51

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   26                    | expression "^" expression •
   27                    | expression • "%" expression

    "^"  shift, and go to state 32

    $default  reduce using rule 26 (creation_expression)


State 52

   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression
   27                    | expression "%" expression •

    "^"  shift, and go to state 32

    $default  reduce using rule 27 (creation_expression)


State 53

    8 variable-declaration: "let" IDENTIFIER ":" type "=" • expression ";"

    INTEGER_LITERAL  shift, and go to state 14
    FLOAT_LITERAL    shift, and go to state 15
    IDENTIFIER       shift, and go to state 16
    "("              shift, and go to state 17

    expression           go to state 56
    creation_expression  go to state 19
    identity_expression  go to state 20
    literal              go to state 21


State 54

   15 print_statement: "print" "(" expression-list ")" ";" •

    $default  reduce using rule 15 (print_statement)


State 55

   16 expression-list: expression-list "," expression •
   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33

    $default  reduce using rule 16 (expression-list)


State 56

    8 variable-declaration: "let" IDENTIFIER ":" type "=" expression • ";"
   21 creation_expression: expression • "+" expression
   22                    | expression • "-" expression
   23                    | expression • "*" expression
   24                    | expression • "/" expression
   25                    | expression • "//" expression
   26                    | expression • "^" expression
   27                    | expression • "%" expression

    "+"   shift, and go to state 27
    "-"   shift, and go to state 28
    "*"   shift, and go to state 29
    "/"   shift, and go to state 30
    "//"  shift, and go to state 31
    "^"   shift, and go to state 32
    "%"   shift, and go to state 33
    ";"   shift, and go to state 57


State 57

    8 variable-declaration: "let" IDENTIFIER ":" type "=" expression ";" •

    $default  reduce using rule 8 (variable-declaration)
